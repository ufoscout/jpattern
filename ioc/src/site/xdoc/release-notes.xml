<document>
	<properties>
		<author email="claudio.quaresima@postecom.it">
			Claudio Quaresima
		</author>
		<title>Configurator Reader - Release notes</title>
	</properties>

	<head></head>
	<body>
		<section name="Release Notes">
			<br />
			<subsection name="2.4 STABLE">
				<table border="0" width="100%">
					<THEAD>
						<tr>
							<th>
								<b>Attivita'</b>
							</th>
							<th>
								<b>Data</b>
							</th>
							<th>
								<b>Tipo</b>
							</th>
							<th>
								<b>Note</b>
							</th>
						</tr>
					</THEAD>
					<TBODY>
						<tr>
							<td>
								Aggiunti nuovo tag:
								<ul>
									 <li>extracontext: e' un tag relativo al context, permettere di estendere il context
									 caricando bean anche da altri file xml</li>
								</ul>
								<br/>
								NB: I context importati non possono fare override di BeanContext gia' definiti nel file xml pricipale
								(verrebbero ignorati), questo comporta che, ad esempio, il bean "jodreplacer" non puo' essere ridefinito 
								e verra' utilizzato sempre quello principale, rendendo impossibile avere un file di properties diverso per 
								ogni context.
							</td>
							<td>
								27/11/2010
								</td>
							<td>Evolutivo</td>
							<td></td>
							<td>
								Aggiunta classe PropertyReaderComposite che permette di dichiarare ed utilizzare contemporaneamente piu'
								file di properties (vedere sezione "Per Iniziare").
							</td>
							<td>
								06/12/2010
								</td>
							<td>Evolutivo</td>
							<td></td>
						</tr>
					</TBODY>
				</table>
			</subsection>
			<br />
			<subsection name="OLD RELEASES">
				<br />
				<subsection name="2.3 STABLE">
					<table border="0" width="100%">
						<THEAD>
							<tr>
								<th>
									<b>Attivita'</b>
								</th>
								<th>
									<b>Data</b>
								</th>
								<th>
									<b>Tipo</b>
								</th>
								<th>
									<b>Note</b>
								</th>
							</tr>
						</THEAD>
						<TBODY>
							<tr>
								<td>
									Aggiunti due nuovi tag:
									<ul>
										 <li>parameterlist: permette di iniettare oggetti di tipo java.util.List sul costruttore</li>
										 <li>entrylist: permette di iniettare oggetti di tipo java.util.List sui getter</li>
									</ul>
									<br/>
									Per gli elementi (Entry, EntryMap etc...) inseriti all'interno del tag 'entrylist' o 'parameterlist'
									non e' necessario valorizzare l'attributo 'key'.
								</td>
								<td>
									29/07/2010
									</td>
								<td>Evolutivo</td>
								<td></td>
							</tr>
						</TBODY>
					</table>
				</subsection>				
				<subsection name="2.2 STABLE">
					<table border="0" width="100%">
						<THEAD>
							<tr>
								<th>
									<b>Attivita'</b>
								</th>
								<th>
									<b>Data</b>
								</th>
								<th>
									<b>Tipo</b>
								</th>
								<th>
									<b>Note</b>
								</th>
							</tr>
						</THEAD>
						<TBODY>
							<tr>
								<td>
									Stessa versione di codice della release 2.1 ma la compilazione e' effettuata con compatibilita' dalla jvm 1.4 in su.
								</td>
								<td>
									21/01/2010
									</td>
								<td></td>
								<td></td>
							</tr>
						</TBODY>
					</table>
				</subsection>
				<subsection name="2.1 STABLE">
					<table border="0" width="100%">
						<THEAD>
							<tr>
								<th>
									<b>Attivita'</b>
								</th>
								<th>
									<b>Data</b>
								</th>
								<th>
									<b>Tipo</b>
								</th>
								<th>
									<b>Note</b>
								</th>
							</tr>
						</THEAD>
						<TBODY>
							<tr>
								<td>
									Aggiunta la possibilità di fare iniezione sul costruttore di tipi primitive <br/>
									utilizzando i seguenti nuovi valori per l'attributo "type":
									<ul>
									  <li>int</li>
									  <li>double</li>
									  <li>byte</li>
									  <li>short</li>
									  <li>long</li>
									  <li>float</li>
									  <li>char</li>
									  <li>boolean</li>
									</ul>
									<i><b>ATTENZIONE:</b> l'iniezione sul costruttore di tipi primitive richiede una jvm 1.5 o superiore.</i> 
								</td>
								<td>
									28/12/2009
									</td>
								<td>
									NEW
									</td>
								<td>
									--
									</td>
							</tr>
						</TBODY>
					</table>
				</subsection>
				<subsection name="2.0 STABLE">
				Questa versione del Configuration Reader (a cura del mago dell'informatica Francesco Cina' :) ) introduce molte novita'
				rispetto alle versioni 1.x, prima fra tutte la possibilità di fare iniziezione sul costruttore oltre che sul setter.
					<table border="0" width="100%">
						<THEAD>
							<tr>
								<th>
									<b>Attivita'</b>
								</th>
								<th>
									<b>Data</b>
								</th>
								<th>
									<b>Tipo</b>
								</th>
								<th>
									<b>Note</b>
								</th>
							</tr>
						</THEAD>
						<TBODY>
							<tr>
								<td>
									Aggiunto il tag opzionale "parameter", questo usato nell'xml ci permette di definire un parametro
									che verra' passato come argomento al costruttore della classe.
									Piu' parametri definiranno un insieme di argomenti (l'ordine di definizione è l'ordine
									in cui verrano passati al costruttore) in tal modo non verra' utilizzato il costruttore 
									senza argomenti ma quello con tali argomenti. 
								</td>
								<td>
									21/12/2009
									</td>
								<td>
									NEW
									</td>
								<td>
									--
									</td>
							</tr>
							<tr>
								<td>
									Aggiunto il tag opzionale "parameterref", è speculare al tag "entryref", permette di creare
									un argomento da passare al costruttore sfruttando un "beancontext"
								</td>
								<td>
									21/12/2009
									</td>
								<td>
									NEW
									</td>
								<td>
									--
									</td>
							</tr>
							<tr>
								<td>
									Aggiunto il tag opzionale "parametermap", è speculare al tag "entrymap", permette di creare
									un oggetto Map che verrà passato al costruttore. Il tag "parameterMap" contiene elementi di
									tipo IEntry (corrispondenti ai tag "entry", "entryref", "entrymap")
								</td>
								<td>
									21/12/2009
									</td>
								<td>
									NEW
									</td>
								<td>
									--
									</td>
							</tr>
							<tr>
								<td>
									Aggiunto l'attributo opzionale "type", per i tag "parameter" ed "entry". Questo nuovo tag permette
									di castare l'oggetto non solo come String (comportamento di default) ma come altri tipi di oggetto.
									Al momento i valori accettati sono: 
									<ul>
									  <li>String (è il valore di default)</li>
									  <li>Integer</li>
									  <li>Double</li>
									  <li>Byte</li>
									  <li>Short</li>
									  <li>Long</li>
									  <li>Float</li>
									  <li>Character</li>
									  <li>Boolean</li>
									  <li>StringBuffer</li>
									  <li>BigInteger</li>
									  <li>BigDecimal</li>
									</ul>
									qualsiasi altro valore verrà castato come una String. 
								</td>
								<td>
									21/12/2009
									</td>
								<td>
									NEW
									</td>
								<td>
									--
									</td>
							</tr>
						</TBODY>
					</table>
				</subsection>

				<br />
				<subsection name="1.4 STABLE">
					<table border="0" width="100%">
						<THEAD>
							<tr>
								<th>
									<b>Attivita'</b>
								</th>
								<th>
									<b>Data</b>
								</th>
								<th>
									<b>Tipo</b>
								</th>
								<th>
									<b>Note</b>
								</th>
							</tr>
						</THEAD>
						<TBODY>
							<tr>
								<td>
									Aggiunta la possibilita' di usare le variabili anche nelle
									entryRef.
								</td>
								<td>
									21/03/2009
								</td>
								<td>
									NEW
								</td>
								<td>
									--
								</td>
							</tr>
						</TBODY>
					</table>
				</subsection>
				<br />
				<subsection name="1.3 STABLE">
					<table border="0" width="100%">
						<THEAD>
							<tr>
								<th>
									<b>Attivita'</b>
								</th>
								<th>
									<b>Data</b>
								</th>
								<th>
									<b>Tipo</b>
								</th>
								<th>
									<b>Note</b>
								</th>
							</tr>
						</THEAD>
						<TBODY>
							<tr>
								<td>
									Release di servizio.
								</td>
								<td>
									02/03/2009
								</td>
								<td>
									--
								</td>
								<td>
									--
								</td>
							</tr>
						</TBODY>
					</table>
				</subsection>
				<br />

				<subsection name="1.2 STABLE">
					<table border="0" width="100%">
						<THEAD>
							<tr>
								<th>
									<b>Attivita'</b>
								</th>
								<th>
									<b>Data</b>
								</th>
								<th>
									<b>Tipo</b>
								</th>
								<th>
									<b>Note</b>
								</th>
							</tr>
						</THEAD>
						<TBODY>
							<tr>
								<td>
									Naming javabean
								</td>
								<td>
									04/11/2008
								</td>
								<td>
									FIXING
								</td>
								<td>
									Se in un oggetto il suffisso dell'accessor era capitalizzato,
									il configreader si rompeva.
									<br />
									es: "setBossMail" veniva trattato come "bossmail" e non come
									"bossMail".

								</td>
							</tr>
						</TBODY>
					</table>
				</subsection>
				<br />
				<subsection name="1.1 STABLE">
					<table border="0" width="100%">
						<THEAD>
							<tr>
								<th>
									<b>Attivita'</b>
								</th>
								<th>
									<b>Data</b>
								</th>
								<th>
									<b>Tipo</b>
								</th>
								<th>
									<b>Note</b>
								</th>
							</tr>
						</THEAD>
						<TBODY>
							<tr>
								<td>
									Release di servizio
								</td>
								<td>
									29/10/2008
								</td>
								<td>
									--
								</td>
								<td>
									--
								</td>
							</tr>
						</TBODY>
					</table>
				</subsection>
			</subsection>
		</section>
	</body>
</document>		